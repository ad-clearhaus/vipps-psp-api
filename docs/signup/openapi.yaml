swagger: "2.0"
info:
  title: "PSP Signup API"
  version: "1.0.0"
  description: >
    The Vipps PSP Signup API allows PSPs to onboard and control their merchants with Vipps.
  contact:
    name: Vipps AS
    email: integration@vipps.no
    url: https://vipps.no/
tags:
  - name: Merchant
    description: Merchants
  - name: SaleUnit
    description: Merchant Sale Units
host: api.vipps.no
schemes:
  - "https"
consumes:
  - application/json
produces:
  - application/json;charset=UTF-8    
paths:
  /merchants:
    parameters:
      - $ref: "#/parameters/auth"
      - $ref: "#/parameters/apimKey"
    get:
      operationId: getMerchants
      summary: Get all merchants for the PSP
      tags: 
       - Merchant
      responses:
        '200':
          description: OK
          schema:
            $ref: "#/definitions/GetMerchantsResponse"
        '400':
          $ref: "#/responses/400"
        '401':
          $ref: "#/responses/401"
        '403':
          $ref: "#/responses/403"               
        '405':
          $ref: "#/responses/405"             
        '500':
          $ref: "#/responses/500"
    post:
      operationId: addMerchant
      summary: Add a merchant to the PSP
      tags:
        - Merchant
      parameters:  
      - name: "merchant"
        in: "body"
        description: "merchant"
        required: true
        schema:
          $ref: "#/definitions/CreateMerchantRequest"
      responses:
        '200':
          description: OK
          schema:
            $ref: "#/definitions/CreateMerchantResponse"
        '400':
          $ref: "#/responses/400"
        '401':
          $ref: "#/responses/401"
        '403':
          $ref: "#/responses/403"
        '405':
          $ref: "#/responses/405"                     
        '415':
          $ref: "#/responses/415"          
        '500':
          $ref: "#/responses/500"
  /merchants/{merchantSerialNumber}:
    parameters:
      - $ref: "#/parameters/auth"
      - $ref: "#/parameters/apimKey"
      - $ref: "#/parameters/merchantSerialNumber"
    get:
      operationId: getMerchant
      summary: Get merchant by Id for the PSP
      tags: 
       - Merchant
      responses:
        '200':
          description: OK
          schema:
            $ref: "#/definitions/Merchant"
        '400':
          $ref: "#/responses/400"
        '401':
          $ref: "#/responses/401"
        '403':
          $ref: "#/responses/403"         
        '404':
          $ref: "#/responses/404" 
        '405':
          $ref: "#/responses/405"     
        '500':
          $ref: "#/responses/500"
    patch:
      operationId: patchMerchant
      summary: Update a merchant for the PSP
      tags: 
       - Merchant
      parameters:  
      - name: "merchant"
        in: "body"
        description: "merchant"
        required: true
        schema:
          $ref: "#/definitions/UpdateMerchantRequest"
      responses:
        '200':
          description: OK
        '400':
          $ref: "#/responses/400"
        '401':
          $ref: "#/responses/401"
        '403':
          $ref: "#/responses/403"         
        '404':
          $ref: "#/responses/404" 
        '405':
          $ref: "#/responses/405"
        '415':
          $ref: "#/responses/415"          
        '500':
          $ref: "#/responses/500"
responses:
  "400":
    description: Invalid request, check request parameters
    schema:
      $ref: "#/definitions/Error"
  "401":
    description: Unauthorized
  "403":
    description: Forbidden
    schema:
      $ref: "#/definitions/Error"
  "404":
    description: Item does not exist
    schema:
      $ref: "#/definitions/Error"
  "405":
    description: Request method not supported
    schema:
      $ref: "#/definitions/Error"
  "415":
    description: Unsupported media type
    schema:
      $ref: "#/definitions/Error"
  "500":
    description: Internal server error
    schema:
      $ref: "#/definitions/Error"
parameters:
  merchantSerialNumber:
    name: merchantSerialNumber
    type: string
    in: path
    required: true
    description: The Vipps merchant serial number
    minLength: 6
    maxLength: 6
    pattern: '^\d{6}$'
  auth:
    name: Authorization
    in: header
    required: true
    description: Bearer 'auth token'
    type: string
  apimKey:
    name: Ocp-Apim-Subscription-Key
    in: header
    description: Subscription key for the PSP Signup API
    required: true
    type: string
definitions:
  Merchant:
    properties:
      organizationNumber:
        type: string
        pattern: '^\d{9}$'
        minLength: 9
        maxLength: 9
        x-order: 1
      companyName:
        type: string
        x-order: 2
      companyEmail:
        type: string
        x-isisnullable: true
        x-order: 3             
      merchantSerialNumber:
        type: string
        description: Vipps sale unit's merchant serial number
        minLength: 6
        maxLength: 6
        pattern: '^\d{6}$'
        x-order: 4
      name:
        type: string
        x-order: 5                         
      status:
        type: string
        enum: 
          - ACTIVE
          - DEACTIVATED
          - PENDING
        x-order: 6            
      logo: 
        type: string
        description: base64 encoded
        x-isnullable: true
        x-order: 7        
      email:
        type: string
        description: Email id of sale unit contact or PSP contact
        format: email
        x-isnullable: true
        x-order: 8        
      website:
        type: string
        description: Website of sale unit or PSP
        format: uri
        x-isnullable: true
        x-order: 9           
      createdAt:
        type: string
        format: date-time
        x-isnullable: true
        x-order: 10
      updatedAt:
        type: string
        format: date-time   
        x-isnullable: true
        x-order: 11        
      address:
        $ref: '#/definitions/Address'
        x-order: 12         
  GetMerchantsResponse:
    type: object
    properties:
      merchants:
        type: array
        description: List of Sale Unit details
        items:
          $ref: "#/definitions/Merchant"
  CreateMerchantRequest:
    properties:
      organizationNumber:
        type: string
        pattern: '^\d{9}$'
        minLength: 9
        maxLength: 9
      name:
        type: string
        maxLength: 200
      logo: 
        type: string
        description: base64 encoded
      email:
        type: string
        description: Email id of sale unit contact or PSP contact
        format: email
        maxLength: 255
      website:
        type: string
        description: Website of sale unit or PSP
        format: uri
        maxLength: 255
      address:
        $ref: '#/definitions/Address'
      companyName:
        type: string
        maxLength: 255
      companyEmail:
        type: string
        maxLength: 255
    required:
      - name
      - address
      - logo
      - organizationNumber
      - companyName
      - companyEmail
  UpdateMerchantRequest:
    properties:
      deactivate:
        type: boolean
      name:
        type: string
        maxLength: 200
      logo: 
        type: string
        description: base64 encoded
      email:
        type: string
        description: Email id of sale unit contact or PSP contact
        format: email
        maxLength: 255
      website:
        type: string
        description: Website of sale unit or PSP
        format: uri
        maxLength: 255
      address:
        $ref: '#/definitions/Address'
  CreateMerchantResponse:
    properties:
      merchantSerialNumber:
        type: string
        description: The Vipps saleunit's merchant serial number
        minLength: 6
        maxLength: 6
        pattern: '^\d{6}$'            
  Address:
    type: object
    description: Address details
    required:
      - addressLine1
      - city
      - countryCode
      - postCode
    properties:
      addressLine1:
        type: string
        description: Address Line 1
        example: 'Robert Levins gate 5'
        maxLength: 255
        x-order: 1
      addressLine2:
        type: string
        description: Address Line 2
        example: 'Att: Rune Garborg'
        maxLength: 255
        x-isnullable: true
        x-order: 2        
      city:
        type: string
        description: City
        example: 'Oslo'
        maxLength: 255
        x-order: 3
      postCode:
        type: string
        description: Post Code
        pattern: '^\d{4}$'
        minLength: 4
        maxLength: 4
        example: '0154'
        x-order: 4                
      countryCode:
        type: string
        description: Two letter country code based on ISO 3166
        pattern: '^\w{2}$'
        minLength: 2
        maxLength: 2
        example: 'NO'
        enum:
          - 'NO'
        x-order: 5          
  Error:
    type: object
    required:
      - status
      - title
      - detail
      - instance
    properties:
      type:
        type: "string"
        description: |
          "A URI reference that identifies the problem type"
        x-order: 1          
      title:
        type: "string"
        description: |
          "A short, human-readable summary of the problem type"
        x-order: 2          
      status:
        type: "number"
        description: |
          "The HTTP status code generated by the origin server for this occurrence of the problem"
        x-order: 3          
      detail:
        type: "string"
        description: |
          "A human-readable explanation specific to this occurrence of the problem. 
          The detail member, if present, ought to focus on helping the client correct the problem, 
          rather than giving debugging information."
        x-order: 4          
      instance:
        type: "string"
        description: |
          "A URI reference that identifies the specific occurrence of the problem"
        x-order: 5          